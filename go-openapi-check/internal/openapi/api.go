/*
 * go-openapi-generator-example
 *
 * Example of REST API. Includes such things as MongoDB, slog, gorilla mux etc... Some kind of a sample project API for educational purposes.
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)



// UserAPIRouter defines the required methods for binding the api requests to a responses for the UserAPI
// The UserAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UserAPIServicer to perform the required actions, then write the service results to the http response.
type UserAPIRouter interface { 
	UserGet(http.ResponseWriter, *http.Request)
	UserIdDelete(http.ResponseWriter, *http.Request)
	UserIdGet(http.ResponseWriter, *http.Request)
	UserIdPut(http.ResponseWriter, *http.Request)
	UserPost(http.ResponseWriter, *http.Request)
}


// UserAPIServicer defines the api actions for the UserAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UserAPIServicer interface { 
	UserGet(context.Context, int64, int64) (ImplResponse, error)
	UserIdDelete(context.Context, string) (ImplResponse, error)
	UserIdGet(context.Context, string) (ImplResponse, error)
	UserIdPut(context.Context, string, User) (ImplResponse, error)
	UserPost(context.Context, User) (ImplResponse, error)
}
