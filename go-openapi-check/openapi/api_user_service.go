/*
 * go-openapi-generator-example
 *
 * Example of REST API. Includes such things as MongoDB, slog, gorilla mux etc... Some kind of a sample project API for educational purposes.
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// UserAPIService is a service that implements the logic for the UserAPIServicer
// This service should implement the business logic for every endpoint for the UserAPI API.
// Include any external packages or services that will be required by this service.
type UserAPIService struct {
}

// NewUserAPIService creates a default api service
func NewUserAPIService() UserAPIServicer {
	return &UserAPIService{}
}

// UserGet - 
func (s *UserAPIService) UserGet(ctx context.Context, limit int64, offset int64) (ImplResponse, error) {
	// TODO - update UserGet with the required logic for this service method.
	// Add api_user_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []User{}) or use other options such as http.Ok ...
	// return Response(200, []User{}), nil

	// TODO: Uncomment the next line to return response Response(0, ApiError{}) or use other options such as http.Ok ...
	// return Response(0, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UserGet method not implemented")
}

// UserIdDelete - 
func (s *UserAPIService) UserIdDelete(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update UserIdDelete with the required logic for this service method.
	// Add api_user_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreatedItem{}) or use other options such as http.Ok ...
	// return Response(200, CreatedItem{}), nil

	// TODO: Uncomment the next line to return response Response(0, ApiError{}) or use other options such as http.Ok ...
	// return Response(0, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UserIdDelete method not implemented")
}

// UserIdGet - 
func (s *UserAPIService) UserIdGet(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update UserIdGet with the required logic for this service method.
	// Add api_user_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	// return Response(200, User{}), nil

	// TODO: Uncomment the next line to return response Response(0, ApiError{}) or use other options such as http.Ok ...
	// return Response(0, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UserIdGet method not implemented")
}

// UserIdPut - 
func (s *UserAPIService) UserIdPut(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update UserIdPut with the required logic for this service method.
	// Add api_user_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	// return Response(200, User{}), nil

	// TODO: Uncomment the next line to return response Response(0, ApiError{}) or use other options such as http.Ok ...
	// return Response(0, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UserIdPut method not implemented")
}

// UserPost - 
func (s *UserAPIService) UserPost(ctx context.Context) (ImplResponse, error) {
	// TODO - update UserPost with the required logic for this service method.
	// Add api_user_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CreatedItem{}) or use other options such as http.Ok ...
	// return Response(200, CreatedItem{}), nil

	// TODO: Uncomment the next line to return response Response(0, ApiError{}) or use other options such as http.Ok ...
	// return Response(0, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UserPost method not implemented")
}
